import { Bot, session } from "grammy";
import { config } from "dotenv";
import { startCommand } from "./commands/start.js";
import { helpCommand } from "./commands/help.js";
import { ideasCommand, handleCategorySelection, handleRetry, handleBack } from "./commands/ideas.js";
import { errorHandler, unknownCommandHandler, textInputHandler } from "./middlewares/errorHandler.js";

config();

const bot = new Bot(process.env.BOT_TOKEN);

// –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
bot.api.setMyCommands([
    { command: "start", description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞" },
    { command: "help", description: "–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º" },
    { command: "ideas", description: "–ü–æ–ª—É—á–∏—Ç—å –∏–¥–µ—é –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞" },
]);

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ—Å—Å–∏–π
bot.use(session({ initial: () => ({ selectedCategory: null, lastIdeaMessageId: null }) }));


// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
bot.command("start", startCommand);
bot.command("help", helpCommand);
bot.command("ideas", ideasCommand);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
bot.callbackQuery(/category:.+/, handleCategorySelection);
bot.callbackQuery("retry", handleRetry);
bot.callbackQuery("back", handleBack);

bot.on("message:text", async (ctx) => {
    if (ctx.message.text.startsWith("/")) {
        await unknownCommandHandler(ctx);
    } else {
        await textInputHandler(ctx);
    }
});





//–ø–æ–ª—É—á–µ–Ω–∏–µ id —Ñ–∞–π–ª–∞ (–∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —Ç–≥)
bot.on("message:photo", async (ctx) => {
    const fileId = ctx.message.photo.pop().file_id; // –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
    console.log("üì∏ –ü–æ–ª—É—á–µ–Ω file_id:", fileId);
    await ctx.reply(`–í–æ—Ç —Ç–≤–æ–π file_id: \`${fileId}\``, { parse_mode: "Markdown" });
});






// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch(errorHandler);

bot.start();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
