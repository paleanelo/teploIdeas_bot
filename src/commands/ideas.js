import fs from "fs";
import { InlineKeyboard } from "grammy";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–¥–µ–∏ –∏–∑ JSON
const ideas = JSON.parse(fs.readFileSync("src/data/ideas.json", "utf-8"));

// –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
const categories = Object.keys(ideas);
const categoryKeyboard = new InlineKeyboard();
categories.forEach((category, index) => {
    categoryKeyboard.text(category, `category:${category}`);
    if ((index + 1) % 2 === 0) categoryKeyboard.row();
});

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /ideas
export function ideasCommand(ctx) {
    ctx.reply(
        "üé® –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –±–æ—è–∑–Ω–∏ –±–µ–ª–æ–≥–æ –ª–∏—Å—Ç–∞ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∏–∂–µ:",
        { reply_markup: categoryKeyboard }
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function removeOldButtons(ctx) {
    if (ctx.session.lastIdeaMessageId) {
        try {
            await ctx.api.editMessageReplyMarkup(ctx.chat.id, ctx.session.lastIdeaMessageId, {
                reply_markup: undefined,
            });
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export async function handleCategorySelection(ctx) {
    const category = ctx.match.input.split(":")[1];
    ctx.session.selectedCategory = category;

    const ideasList = ideas[category];
    const randomIdea = ideasList[Math.floor(Math.random() * ideasList.length)];
    const isImage = randomIdea.startsWith("AgACAgIA");
    
    const actionKeyboard = new InlineKeyboard()
        .text("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë", "retry")
        .text("–ù–∞–∑–∞–¥", "back");

    await removeOldButtons(ctx);

    if (isImage) {
        const newMsg = await ctx.replyWithPhoto(randomIdea, {
            caption: "üñºÔ∏è –í–æ—Ç —Ñ–æ—Ç–æ –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–¥–µ—é!",
            reply_markup: actionKeyboard,
        });
        ctx.session.lastIdeaMessageId = newMsg.message_id;
    } else {
        const newMsg = await ctx.reply(`‚ú® *–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:* ${category}\nüí° *–ò–¥–µ—è:* ${randomIdea}`, {
            reply_markup: actionKeyboard,
            parse_mode: "Markdown",
        });
        ctx.session.lastIdeaMessageId = newMsg.message_id;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑"
export async function handleRetry(ctx) {
    const category = ctx.session.selectedCategory;
    if (!category) {
        return ctx.answerCallbackQuery("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!");
    }

    const ideasList = ideas[category];
    const randomIdea = ideasList[Math.floor(Math.random() * ideasList.length)];
    const isImage = randomIdea.startsWith("AgACAgIA");
    
    const actionKeyboard = new InlineKeyboard()
        .text("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë", "retry")
        .text("–ù–∞–∑–∞–¥", "back");

    await removeOldButtons(ctx);

    if (isImage) {
        const newMsg = await ctx.replyWithPhoto(randomIdea, {
            caption: "üñºÔ∏è –í–æ—Ç —Ñ–æ—Ç–æ –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–¥–µ—é!",
            reply_markup: actionKeyboard,
        });
        ctx.session.lastIdeaMessageId = newMsg.message_id;
    } else {
        const newMsg = await ctx.reply(`‚ú® *–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:* ${category}\nüí° *–ò–¥–µ—è:* ${randomIdea}`, {
            reply_markup: actionKeyboard,
            parse_mode: "Markdown",
        });
        ctx.session.lastIdeaMessageId = newMsg.message_id;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
export async function handleBack(ctx) {
    ctx.session.selectedCategory = null;
    await removeOldButtons(ctx);
    const newMsg = await ctx.reply("üé® –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –±–æ—è–∑–Ω–∏ –±–µ–ª–æ–≥–æ –ª–∏—Å—Ç–∞ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∏–∂–µ:", { 
        reply_markup: categoryKeyboard 
    });
    ctx.session.lastIdeaMessageId = newMsg.message_id;
}
